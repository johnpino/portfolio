@import '@/src/scss/abstracts/variables';

@mixin media-query($breakpoint, $breakpoints: $breakpoints) {
	@if $breakpoint == small {
		@content;
	}

	@if $breakpoint == medium {
		@media (min-width: map-get($breakpoints, 'medium')) {
			@content;
		}
	}

	@if $breakpoint == large {
		@media (min-width: map-get($breakpoints, 'large')) {
			@content;
		}
	}
}

@mixin create-selectors($breakpoint: null) {
	$infix: if($breakpoint == null, '', '-#{$breakpoint}');

	@for $i from 1 through $columns {
		.col#{$infix}-#{$i} {
			grid-column-end: span $i;
		}
		.col-offset#{$infix}-#{$i} {
			grid-column-start: $i + 1;
		}
		.row#{$infix}-#{$i} {
			grid-row-end: span $i;
		}
		.row-offset#{$infix}-#{$i} {
			grid-row-start: $i + 1;
		}
	}
}

@mixin button-variant($variant) {
	&.button--#{$variant} {
		background-color: var(--button-#{$variant}-initial-background-color);
		border-color: var(--button-#{$variant}-initial-border-color);
		border-width: var(--button-#{$variant}-border-width);
		color: var(--button-#{$variant}-initial-text-color);

		&:focus {
			border-color: var(--button-#{$variant}-focus-border-color);
			background-color: var(--button-#{$variant}-focus-background-color);
			color: var(--button-#{$variant}-focus-text-color);
			box-shadow: var(--button-#{$variant}-drop-shadow);
		}
	}

	@media (hover: hover) {
		&.button--#{$variant}-hover:hover {
			border-color: var(--button-#{$variant}-hover-border-color);
			background-color: var(--button-#{$variant}-hover-background-color);
			color: var(--button-#{$variant}-hover-text-color);
		}
	}
}

@mixin button-size($size) {
	&.button--#{$size} {
		padding: var(--button-#{$size}-padding-vertical) var(--button-#{$size}-padding-horizontal);
		font: var(--button-#{$size}-typography);
		letter-spacing: var(--button-#{$size}-typography-letter-spacing);
	}
}
